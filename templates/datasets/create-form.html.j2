{% extends 'base.html.j2' %}

{% block title %} Datasets {% endblock %}

{% block content %}
<article>
    <header>
        <h1>Novo dataset</h1>
    </header>
        <section>
            <form id="new-dataset">
                <div class="form-group">
                    <h1><i class="fa-solid fa-percent"></i> Porcentagem de teste/treino</h1>
                    <span>
                        <i class="fa-solid fa-flask"></i>
                        <span id="test_status">30%</span>
                    </span>
                    <input type="range" id="train_percent" name="train_percent" min="1" max="99" value="70" />
                    <span>
                        <span id="train_status">70%</span>
                        <i class="fa-solid fa-dumbbell"></i>
                    </span>
                </div>

                <div class="form-group">
                    <h1><i class="fa-solid fa-table-columns"></i> Colunas</h1>
                    {% for i, col in columns %}
                        <span>
                            <input class="col-selector" id="column-{{ i+1 }}" name="column-{{ i+1 }}" value="{{col}}" type="checkbox" />
                            <label for="column-{{ i+1 }}">{{ col }}</label>
                        </span>
                    {% endfor %}
                </div>

                <div class="form-group">
                    <input id="submit-form" type="submit" value="Criar novo dataset" />
                    <p id="no-col-error">Selecione pelo menos uma coluna.</p>
                </div>
            </form>
        </section>
</article>
<style>
    #no-col-error {
        display: none;
        color: red;
        font-weight: 800;
        padding-top: 1em;
    }

    .form-group {
        padding: 1em 0;
    }

</style>
<script>
    /**
    * Faz requisição baseado nos dados do formulário
    */
    document.querySelector('#new-dataset').addEventListener('submit', (event) => {
        event.preventDefault();
        
        const train_percent = Number(document.querySelector("#train_percent").value)/100;
        const columnSelectors = Array.from(document.querySelectorAll(".col-selector"));
        const columns = columnSelectors
            .filter((elem) => elem.checked) // pega elementos que estão marcados
            .map((elem) => elem.value) // extrai os valores

        // se não foi selecionada nenhuma coluna, mostre a mensagem de erro e pare
        if(columns.length === 0) {
            const warn = document.querySelector("#no-col-error");
            warn.style.display = 'block';
            return false;
        }

        // faz requisição
        fetch("{{url_for('datasets.gen_dataset')}}", {
            method: "POST",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                train_percent,
                columns
            })
        }).then(
            (response) => {
                console.log("OK");
                // manda de volta para página de datasets
                window.location.href = "{{url_for('datasets.dataset_home')}}"
            },
            (error) => (console.log(error)));
        return false;
    });

    /**
    * Mantém a sincronia entre o slider de treino/teste e os indicadores
    */
    document.querySelector('#train_percent').addEventListener('change', (ev) => {
        document.querySelector('#train_status').textContent = ev.target.value + '%';
        document.querySelector('#test_status').textContent = 100 - Number(ev.target.value) + '%';
    });
</script>
{% endblock %}
